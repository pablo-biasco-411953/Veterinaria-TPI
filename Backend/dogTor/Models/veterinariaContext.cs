// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace dogTor.Models;

public partial class veterinariaContext : DbContext
{
    public veterinariaContext(DbContextOptions<veterinariaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Atencion> Atencions { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<DetalleAtencion> DetalleAtencions { get; set; }

    public virtual DbSet<Disponibilidad> Disponibilidads { get; set; }

    public virtual DbSet<Mascotum> Mascota { get; set; }

    public virtual DbSet<TipoAtencion> TipoAtencions { get; set; }

    public virtual DbSet<TipoMascotum> TipoMascota { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Atencion>(entity =>
        {
            entity.HasKey(e => e.CodAtencion).HasName("PK__ATENCION__6AC5F2D08B83EE68");

            entity.ToTable("ATENCION");

            entity.Property(e => e.CodAtencion).HasColumnName("cod_atencion");
            entity.Property(e => e.CodDisponibilidad).HasColumnName("cod_disponibilidad");
            entity.Property(e => e.CodMascota).HasColumnName("cod_mascota");
            entity.Property(e => e.CodTipoA).HasColumnName("cod_tipoA");
            entity.Property(e => e.Importe)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("importe");

            entity.HasOne(d => d.CodDisponibilidadNavigation).WithMany(p => p.Atencions)
                .HasForeignKey(d => d.CodDisponibilidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ATENCION__cod_di__47DBAE45");

            entity.HasOne(d => d.CodMascotaNavigation).WithMany(p => p.Atencions)
                .HasForeignKey(d => d.CodMascota)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ATENCION__cod_ma__48CFD27E");

            entity.HasOne(d => d.CodTipoANavigation).WithMany(p => p.Atencions)
                .HasForeignKey(d => d.CodTipoA)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ATENCION__cod_ti__49C3F6B7");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.CodCliente).HasName("PK__CLIENTE__08ED61F376C473DA");

            entity.ToTable("CLIENTE");

            entity.HasIndex(e => e.Dni, "UQ__CLIENTE__D87608A7349F0D52").IsUnique();

            entity.Property(e => e.CodCliente).HasColumnName("cod_cliente");
            entity.Property(e => e.Apellido)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Dni).HasColumnName("dni");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("password");
            entity.Property(e => e.Telefono)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("telefono");
        });

        modelBuilder.Entity<DetalleAtencion>(entity =>
        {
            entity.HasKey(e => e.CodDetalle).HasName("PK__DETALLE___03E666AEBA3C8242");

            entity.ToTable("DETALLE_ATENCION");

            entity.Property(e => e.CodDetalle).HasColumnName("cod_detalle");
            entity.Property(e => e.CodAtencion).HasColumnName("cod_atencion");
            entity.Property(e => e.CodTipoA).HasColumnName("cod_tipoA");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("observaciones");

            entity.HasOne(d => d.CodAtencionNavigation).WithMany(p => p.DetalleAtencions)
                .HasForeignKey(d => d.CodAtencion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DETALLE_A__cod_a__4AB81AF0");

            entity.HasOne(d => d.CodTipoANavigation).WithMany(p => p.DetalleAtencions)
                .HasForeignKey(d => d.CodTipoA)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DETALLE_A__cod_t__4BAC3F29");
        });

        modelBuilder.Entity<Disponibilidad>(entity =>
        {
            entity.HasKey(e => e.CodDisponibilidad).HasName("PK__DISPONIB__2B79026952AAC707");

            entity.ToTable("DISPONIBILIDAD");

            entity.Property(e => e.CodDisponibilidad).HasColumnName("cod_disponibilidad");
            entity.Property(e => e.Fecha)
                .HasColumnType("datetime")
                .HasColumnName("fecha");
            entity.Property(e => e.Hora).HasColumnName("hora");
            entity.Property(e => e.Ocupada).HasColumnName("ocupada");
        });

        modelBuilder.Entity<Mascotum>(entity =>
        {
            entity.HasKey(e => e.CodMascota).HasName("PK__MASCOTA__6BC4D21DB0AD9CB2");

            entity.ToTable("MASCOTA");

            entity.Property(e => e.CodMascota).HasColumnName("cod_mascota");
            entity.Property(e => e.CodCliente).HasColumnName("cod_cliente");
            entity.Property(e => e.CodTipo).HasColumnName("cod_tipo");
            entity.Property(e => e.Edad).HasColumnName("edad");
            entity.Property(e => e.Eliminado)
                .HasDefaultValue(true)
                .HasColumnName("eliminado");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.CodClienteNavigation).WithMany(p => p.Mascota)
                .HasForeignKey(d => d.CodCliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MASCOTA__cod_cli__45F365D3");

            entity.HasOne(d => d.CodTipoNavigation).WithMany(p => p.Mascota)
                .HasForeignKey(d => d.CodTipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MASCOTA__cod_tip__46E78A0C");
        });

        modelBuilder.Entity<TipoAtencion>(entity =>
        {
            entity.HasKey(e => e.CodTipoA).HasName("PK__TIPO_ATE__A85295C9D70138DB");

            entity.ToTable("TIPO_ATENCION");

            entity.Property(e => e.CodTipoA).HasColumnName("cod_tipoA");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<TipoMascotum>(entity =>
        {
            entity.HasKey(e => e.CodTipo).HasName("PK__TIPO_MAS__7C06900DA9FFD6E3");

            entity.ToTable("TIPO_MASCOTA");

            entity.Property(e => e.CodTipo).HasColumnName("cod_tipo");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}